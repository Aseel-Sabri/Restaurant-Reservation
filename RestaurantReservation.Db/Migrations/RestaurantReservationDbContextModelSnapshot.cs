// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantReservation.Db;
using RestaurantReservation.Db.DbContext;

#nullable disable

namespace RestaurantReservation.Db.Migrations
{
    [DbContext(typeof(RestaurantReservationDbContext))]
    partial class RestaurantReservationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantReservation.Db.KeylessEntities.EmployeeDetails", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vw_EmployeeDetails", (string)null);
                });

            modelBuilder.Entity("RestaurantReservation.Db.KeylessEntities.ReservationDetails", b =>
                {
                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_ReservationDetails", (string)null);
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            PhoneNumber = "555-5678"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "bob.smith@example.com",
                            FirstName = "Bob",
                            LastName = "Smith",
                            PhoneNumber = "555-8765"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "emily.davis@example.com",
                            FirstName = "Emily",
                            LastName = "Davis",
                            PhoneNumber = "555-4321"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "michael.miller@example.com",
                            FirstName = "Michael",
                            LastName = "Miller",
                            PhoneNumber = "555-9876"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Position = "Chef",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Position = "Waiter",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Bob",
                            LastName = "Smith",
                            Position = "Manager",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 4,
                            FirstName = "Emily",
                            LastName = "Davis",
                            Position = "Chef",
                            RestaurantId = 1
                        },
                        new
                        {
                            EmployeeId = 5,
                            FirstName = "Michael",
                            LastName = "Miller",
                            Position = "Waiter",
                            RestaurantId = 2
                        },
                        new
                        {
                            EmployeeId = 6,
                            FirstName = "Sophia",
                            LastName = "Brown",
                            Position = "Waiter",
                            RestaurantId = 2
                        },
                        new
                        {
                            EmployeeId = 7,
                            FirstName = "Daniel",
                            LastName = "Taylor",
                            Position = "Chef",
                            RestaurantId = 2
                        },
                        new
                        {
                            EmployeeId = 8,
                            FirstName = "Olivia",
                            LastName = "Moore",
                            Position = "Manager",
                            RestaurantId = 2
                        },
                        new
                        {
                            EmployeeId = 9,
                            FirstName = "David",
                            LastName = "Wilson",
                            Position = "Manager",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 10,
                            FirstName = "Emma",
                            LastName = "Jones",
                            Position = "Chef",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 11,
                            FirstName = "Liam",
                            LastName = "Johnson",
                            Position = "Waiter",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 12,
                            FirstName = "Ava",
                            LastName = "Smith",
                            Position = "Chef",
                            RestaurantId = 3
                        },
                        new
                        {
                            EmployeeId = 13,
                            FirstName = "Noah",
                            LastName = "Davis",
                            Position = "Waiter",
                            RestaurantId = 4
                        },
                        new
                        {
                            EmployeeId = 14,
                            FirstName = "Isabella",
                            LastName = "Miller",
                            Position = "Manager",
                            RestaurantId = 4
                        },
                        new
                        {
                            EmployeeId = 15,
                            FirstName = "Mason",
                            LastName = "Wilson",
                            Position = "Waiter",
                            RestaurantId = 4
                        },
                        new
                        {
                            EmployeeId = 16,
                            FirstName = "Sophie",
                            LastName = "Brown",
                            Position = "Chef",
                            RestaurantId = 4
                        },
                        new
                        {
                            EmployeeId = 17,
                            FirstName = "Ethan",
                            LastName = "Taylor",
                            Position = "Waiter",
                            RestaurantId = 5
                        },
                        new
                        {
                            EmployeeId = 18,
                            FirstName = "Aria",
                            LastName = "Moore",
                            Position = "Chef",
                            RestaurantId = 5
                        },
                        new
                        {
                            EmployeeId = 19,
                            FirstName = "Carter",
                            LastName = "Wilson",
                            Position = "Waiter",
                            RestaurantId = 5
                        },
                        new
                        {
                            EmployeeId = 20,
                            FirstName = "Lily",
                            LastName = "Jones",
                            Position = "Manager",
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Description = "Classic Italian pasta dish with meat sauce",
                            Name = "Spaghetti Bolognese",
                            Price = 12.99m,
                            RestaurantId = 1
                        },
                        new
                        {
                            ItemId = 2,
                            Description = "Assortment of fresh sushi rolls",
                            Name = "Sushi Combo",
                            Price = 22.5m,
                            RestaurantId = 1
                        },
                        new
                        {
                            ItemId = 3,
                            Description = "Juicy beef patty with gourmet toppings",
                            Name = "Gourmet Burger",
                            Price = 15.75m,
                            RestaurantId = 1
                        },
                        new
                        {
                            ItemId = 4,
                            Description = "Fresh salad with tomatoes, olives, and feta cheese",
                            Name = "Mediterranean Salad",
                            Price = 9.99m,
                            RestaurantId = 1
                        },
                        new
                        {
                            ItemId = 5,
                            Description = "Decadent chocolate dessert with a gooey center",
                            Name = "Chocolate Fondant",
                            Price = 8.5m,
                            RestaurantId = 2
                        },
                        new
                        {
                            ItemId = 6,
                            Description = "Creamy Alfredo sauce with grilled chicken",
                            Name = "Chicken Alfredo",
                            Price = 14.5m,
                            RestaurantId = 2
                        },
                        new
                        {
                            ItemId = 7,
                            Description = "Spicy tuna, avocado, and cucumber sushi roll",
                            Name = "Dragon Roll",
                            Price = 18.75m,
                            RestaurantId = 2
                        },
                        new
                        {
                            ItemId = 8,
                            Description = "Beef patty with BBQ sauce, bacon, and cheddar",
                            Name = "BBQ Bacon Burger",
                            Price = 16.99m,
                            RestaurantId = 2
                        },
                        new
                        {
                            ItemId = 9,
                            Description = "Grilled lamb with tzatziki sauce in a pita",
                            Name = "Greek Gyro",
                            Price = 11.25m,
                            RestaurantId = 3
                        },
                        new
                        {
                            ItemId = 10,
                            Description = "Classic Italian coffee-flavored dessert",
                            Name = "Tiramisu",
                            Price = 7.99m,
                            RestaurantId = 3
                        },
                        new
                        {
                            ItemId = 11,
                            Description = "Layers of pasta, ricotta, meat sauce, and mozzarella",
                            Name = "Lasagna",
                            Price = 13.5m,
                            RestaurantId = 3
                        },
                        new
                        {
                            ItemId = 12,
                            Description = "Assorted fish and avocado sushi roll",
                            Name = "Rainbow Roll",
                            Price = 20.25m,
                            RestaurantId = 3
                        },
                        new
                        {
                            ItemId = 13,
                            Description = "Plant-based patty with fresh veggies",
                            Name = "Vegetarian Burger",
                            Price = 14.99m,
                            RestaurantId = 4
                        },
                        new
                        {
                            ItemId = 14,
                            Description = "Tomato, mozzarella, and basil salad",
                            Name = "Caprese Salad",
                            Price = 10.5m,
                            RestaurantId = 4
                        },
                        new
                        {
                            ItemId = 15,
                            Description = "Creamy New York-style cheesecake",
                            Name = "Cheesecake",
                            Price = 9.25m,
                            RestaurantId = 4
                        },
                        new
                        {
                            ItemId = 16,
                            Description = "Creamy Alfredo sauce with fettuccine pasta",
                            Name = "Fettuccine Alfredo",
                            Price = 12.75m,
                            RestaurantId = 4
                        },
                        new
                        {
                            ItemId = 17,
                            Description = "Udon noodles in a savory broth with tempura",
                            Name = "Tempura Udon",
                            Price = 15.5m,
                            RestaurantId = 5
                        },
                        new
                        {
                            ItemId = 18,
                            Description = "Grilled chicken with chipotle mayo and pepper jack cheese",
                            Name = "Chipotle Chicken Burger",
                            Price = 17.25m,
                            RestaurantId = 5
                        },
                        new
                        {
                            ItemId = 19,
                            Description = "Romaine lettuce, croutons, and parmesan with Caesar dressing",
                            Name = "Caesar Salad",
                            Price = 8.99m,
                            RestaurantId = 5
                        },
                        new
                        {
                            ItemId = 20,
                            Description = "Warm chocolate cake with a gooey molten center",
                            Name = "Molten Lava Cake",
                            Price = 10.99m,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 10, 8, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5424),
                            ReservationId = 1,
                            TotalAmount = 99.99m
                        },
                        new
                        {
                            OrderId = 2,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 10, 7, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5449),
                            ReservationId = 2,
                            TotalAmount = 81.69m
                        },
                        new
                        {
                            OrderId = 3,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 10, 6, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5460),
                            ReservationId = 3,
                            TotalAmount = 217.96m
                        },
                        new
                        {
                            OrderId = 4,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 10, 5, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5484),
                            ReservationId = 4,
                            TotalAmount = 174.75m
                        },
                        new
                        {
                            OrderId = 5,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 10, 4, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5502),
                            ReservationId = 5,
                            TotalAmount = 98.22m
                        },
                        new
                        {
                            OrderId = 6,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 10, 3, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5512),
                            ReservationId = 6,
                            TotalAmount = 49.75m
                        },
                        new
                        {
                            OrderId = 7,
                            EmployeeId = 1,
                            OrderDate = new DateTime(2023, 10, 2, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5521),
                            ReservationId = 7,
                            TotalAmount = 64.48m
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            MenuItemId = 2,
                            OrderId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 2,
                            MenuItemId = 4,
                            OrderId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 3,
                            MenuItemId = 1,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 4,
                            MenuItemId = 4,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 5,
                            MenuItemId = 4,
                            OrderId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 6,
                            MenuItemId = 3,
                            OrderId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 7,
                            MenuItemId = 8,
                            OrderId = 3,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 8,
                            MenuItemId = 7,
                            OrderId = 3,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 9,
                            MenuItemId = 7,
                            OrderId = 3,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 10,
                            MenuItemId = 7,
                            OrderId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 11,
                            MenuItemId = 6,
                            OrderId = 4,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 12,
                            MenuItemId = 7,
                            OrderId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 13,
                            MenuItemId = 7,
                            OrderId = 4,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 14,
                            MenuItemId = 10,
                            OrderId = 5,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 15,
                            MenuItemId = 12,
                            OrderId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 16,
                            MenuItemId = 11,
                            OrderId = 5,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 17,
                            MenuItemId = 16,
                            OrderId = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 18,
                            MenuItemId = 15,
                            OrderId = 6,
                            Quantity = 4
                        },
                        new
                        {
                            OrderItemId = 19,
                            MenuItemId = 17,
                            OrderId = 7,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 20,
                            MenuItemId = 17,
                            OrderId = 7,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 21,
                            MenuItemId = 19,
                            OrderId = 7,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            CustomerId = 1,
                            PartySize = 4,
                            ReservationDate = new DateTime(2023, 10, 10, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5249),
                            RestaurantId = 1,
                            TableId = 1
                        },
                        new
                        {
                            ReservationId = 2,
                            CustomerId = 1,
                            PartySize = 2,
                            ReservationDate = new DateTime(2023, 10, 11, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5304),
                            RestaurantId = 1,
                            TableId = 2
                        },
                        new
                        {
                            ReservationId = 3,
                            CustomerId = 3,
                            PartySize = 6,
                            ReservationDate = new DateTime(2023, 10, 12, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5308),
                            RestaurantId = 2,
                            TableId = 5
                        },
                        new
                        {
                            ReservationId = 4,
                            CustomerId = 4,
                            PartySize = 8,
                            ReservationDate = new DateTime(2023, 10, 13, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5311),
                            RestaurantId = 2,
                            TableId = 6
                        },
                        new
                        {
                            ReservationId = 5,
                            CustomerId = 5,
                            PartySize = 3,
                            ReservationDate = new DateTime(2023, 10, 14, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5315),
                            RestaurantId = 3,
                            TableId = 9
                        },
                        new
                        {
                            ReservationId = 6,
                            CustomerId = 5,
                            PartySize = 3,
                            ReservationDate = new DateTime(2023, 10, 14, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5320),
                            RestaurantId = 4,
                            TableId = 15
                        },
                        new
                        {
                            ReservationId = 7,
                            CustomerId = 5,
                            PartySize = 3,
                            ReservationDate = new DateTime(2023, 10, 14, 11, 1, 50, 514, DateTimeKind.Local).AddTicks(5323),
                            RestaurantId = 5,
                            TableId = 19
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            Address = "123 Main St, Cityville",
                            Name = "The Gourmet Spot",
                            OpeningHours = "08:00 - 22:00",
                            PhoneNumber = "555-1111"
                        },
                        new
                        {
                            RestaurantId = 2,
                            Address = "456 Oak St, Townsville",
                            Name = "Pasta Paradise",
                            OpeningHours = "11:00 - 21:00",
                            PhoneNumber = "555-2222"
                        },
                        new
                        {
                            RestaurantId = 3,
                            Address = "789 Pine St, Villageland",
                            Name = "Sushi Haven",
                            OpeningHours = "12:00 - 20:00",
                            PhoneNumber = "555-3333"
                        },
                        new
                        {
                            RestaurantId = 4,
                            Address = "101 Elm St, Hamletville",
                            Name = "Burger Bistro",
                            OpeningHours = "10:00 - 19:00",
                            PhoneNumber = "555-4444"
                        },
                        new
                        {
                            RestaurantId = 5,
                            Address = "202 Maple St, Burgertown",
                            Name = "Mediterranean Delight",
                            OpeningHours = "9:00 - 18:00",
                            PhoneNumber = "555-5555"
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 2,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 5,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 10,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 2,
                            RestaurantId = 1
                        },
                        new
                        {
                            TableId = 5,
                            Capacity = 6,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 6,
                            Capacity = 10,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 7,
                            Capacity = 10,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 8,
                            Capacity = 2,
                            RestaurantId = 2
                        },
                        new
                        {
                            TableId = 9,
                            Capacity = 10,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 10,
                            Capacity = 10,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 11,
                            Capacity = 7,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 12,
                            Capacity = 5,
                            RestaurantId = 3
                        },
                        new
                        {
                            TableId = 13,
                            Capacity = 3,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 14,
                            Capacity = 2,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 15,
                            Capacity = 10,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 16,
                            Capacity = 9,
                            RestaurantId = 4
                        },
                        new
                        {
                            TableId = 17,
                            Capacity = 7,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 18,
                            Capacity = 8,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 19,
                            Capacity = 4,
                            RestaurantId = 5
                        },
                        new
                        {
                            TableId = 20,
                            Capacity = 3,
                            RestaurantId = 5
                        });
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Employee", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.OrderItem", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.MenuItem", "Item")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Reservation", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestaurantReservation.Db.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Table", b =>
                {
                    b.HasOne("RestaurantReservation.Db.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantReservation.Db.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
